version: "3"

networks:
  laravel:

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-youruser}
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    image: mysql
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: trinityDB
      MYSQL_USER: trinity
      MYSQL_PASSWORD: trinity
      MYSQL_ROOT_PASSWORD: trinity # Ensure this matches your .env file
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-youruser}
    container_name: php
    volumes:
      - ./:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-youruser}
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${USER:-youruser}
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-youruser}
    container_name: artisan
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.8.5
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: trinity # Ensure this matches your .env file
    depends_on:
      - mysql
    networks:
      - laravel

  sonar-postgres:
    image: postgres:12
    container_name: sonar-postgres
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarqube
      - POSTGRES_DB=sonarqube
    ports:
      - "5432:5432"
    networks:
      - laravel

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    depends_on:
      - sonar-postgres
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonar-postgres:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - laravel

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
